/*****************************************************************************
* Copyright (C) 2002 Kim Hyun-Gyu  <babyworm@adc.co.kr>
*
* This program is free software. you can redistribute it and/or modify
* it under the terms of the GNU General Public License as published by
* the Free Software Foundation@ either version 2 of the License, or
* (at your option) any later version.
*
* This program is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY, without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
* GNU General Public License for more details.
*
* You should have received a copy of the GNU General Public License
* along with this program@ if not, write to the Free Software
* Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
*
*****************************************************************************
*
* Notes:
*  add OPT_SHORT option, compact representation to reduce LERI
*  Represenation is Fixed to correct negative constant
*
*****************************************************************************
*
* $Id: imdct_l_ae32000.S,v 0.1 2002/12/10  $
*
* 2002/12/10:   Kim Hyun-Gyu <babyworm@adc.co.kr>
*   - Partial optimization
* 2002/11/21:   Kim Hyun-Gyu <babyworm@adc.co.kr>
*   - Original created.
*
****************************************************************************/

/***************************************************************************
*static
* void III_imdct_l(mad_fixed_t const X[18], mad_fixed_t z[36],
*		 unsigned int block_type)
*
* %R8 : pointer of X array so called X[0]
* %R9 : pointer of z array so called z[0]
* SP + 0xc : block type value
* 
****************************************************************************/

    .macro  mlz2lo, reg_hi, reg_lo
    MFMH  \reg_hi
    MFML  \reg_lo
    LSR   28, \reg_lo
    ASL   4,  \reg_hi
    OR    \reg_hi, \reg_lo
    .endm

    .macro  mlzII, reg_hi, reg_lo
    MFMH  \reg_hi
    LSR   28, \reg_lo
    ASL   4,  \reg_hi
    OR    \reg_hi, \reg_lo
    .endm

    .text
    .align 1

    .global III_imdct_l
    .global _III_imdct_l
    
    .type	 _III_imdct_l,@function

III_imdct_l:
_III_imdct_l:

/*****************************************************************************
 * On Entry:
 *    %R8       : pointer of X[]      ;1st argument
 *    %R9       : pointer of output[] ;2nd argument 
 *    (%SP+0xc) : Block type          ;3rd argument
 *
 *-----------------------------------------------------------
 * callee save : save current context
 * (SP = SP - 0x38) so, 3rd argument now located in SP + 0x44
 * We call this SP as Initial SP. in another world iSP
 ****************************************************************************/
#Callee_Save: 
  PUSH    %R0-%R7
  PUSH    %R10-%R15

/********************************************************
 * Sequential processing
 ******************************************************
 * MAD_F_ML0(hi, lo, X[4],  MAD_F(0x0ec835e8)); 
 * MAD_F_MLA(hi, lo, X[13], MAD_F(0x061f78aa));
 * t6 = MAD_F_MLZ(hi, lo);
 *******************************************************/
 

IMDCT36_01:
  LD    (%R8, 0x10), %R0		  
  LD    (%R8, 0x34), %R1	    
  asr   0xc, %R0
  asr   0xc, %R1
  MUL   0x0ec8,  %R0		      
  MAC   0x061f,  %R1		      
  MFML  %R7

  
 /********************************************************     
 * MAD_F_MLA(hi, lo, (t14 = X[1] - X[10]), -MAD_F(0x061f78aa));
 * MAD_F_MLA(hi, lo, (t15 = X[7] + X[16]), -MAD_F(0x0ec835e8));
 * 
 * t0 = MAD_F_MLZ(hi, lo);
 ***********************************************************/

IMDCT36_02:  
  LD    (%R8, 0x04) ,%R0        /* X[1]                           */
  LD    (%R8, 0x28) ,%R2        /* X[10]                          */
  LD    (%R8, 0x1c) ,%R3        /* X[7]                           */
  LD    (%R8, 0x40) ,%R4        /* X[16]                          */
  SUB   %R2, %R0                
  ADD   %R4, %R3                
  asr   0xc, %R0
  asr   0xc, %R3
  
  /* recheck */
  MAC   0xfffff9e0, %R0      
  MAC   0xfffff137, %R3          /* t0                             */
  mfml  %R5
  
/***************************************************************************
 * Register usage
 *    0       1       2       3       4       5       6       7
 *--------------------------------------------------------------------------
 *    t14     X13     X[10]   t15     X[16]   t0      FP      t6
 *==========================================================================    
 *    8       9       10      11      12      13      14      15    
 *--------------------------------------------------------------------------
 *    X_ptr   x_ptr   NA      NA      NA      NA      NA      NA    
 ***************************************************************************
 * MAD_F_MLA(hi, lo, (t8  = X[0] - X[11] - X[12]),  MAD_F(0x0216a2a2));
 * MAD_F_MLA(hi, lo, (t9  = X[2] - X[9]  - X[14]),  MAD_F(0x09bd7ca0));
 * MAD_F_MLA(hi, lo, (t10 = X[3] - X[8]  - X[15]), -MAD_F(0x0cb19346));
 * MAD_F_MLA(hi, lo, (t11 = X[5] - X[6]  - X[17]), -MAD_F(0x0fdcf549));
 **************************************************************************/
IMDCT03:  
  LD    (%R8, 0x0)  ,%R12       /* X[0]                                  */
  LD    (%R8, 0x2c) ,%R11       /* X[11]                                 */
  LD    (%R8, 0x30) ,%R10       /* X[12]                                 */
  SUB   %R11, %R12              /* R12 = X[0]-X[11]                      */
  SUB   %R10, %R12              /* t8 = X[0]-X[11]-X[12] -> R12          */
  asr   0xc, %R12
  
  LD    (%R8, 0x8)  ,%R13       /* X[2]                                  */
  LD    (%R8, 0x24) ,%R14       /* X[9]                                  */
  LD    (%R8, 0x38) ,%R15       /* X[14]                                 */
  SUB   %R14, %R13              /* R13 = X[2] - X[9]                     */
  SUB   %R15, %R13              /* t9 = X[2]-X[9]-X[14]  -> R13          */
  asr   0xc, %R13
                                
  LD    (%R8, 0xc)  ,%R14       /* X[3]                                  */
  LD    (%R8, 0x20) ,%R1        /* X[8]        -> X[13] vanished         */
  LD    (%R8, 0x3c) ,%R2        /* X[15]       -> X[10] vanished         */
  SUB   %R1, %R14               /* X[3]-X[8]                            */
  SUB   %R2, %R14               /* t10  = X[3]-X[8]-X[15]               */
  asr   0xc, %R14

  SUB   %R10, %R2               /* T15: X[15]-X[12] code scheduling     */
  SUB   %R11, %R1               /* T8 : X[8]-X[11]  Code Scheduled      */
 
  LD    (%R8, 0x14) ,%R15       /* X[5]                                  */
  LD    (%R8, 0x18) ,%R4        /* X[6]        -> X[16] vanished         */
  LD    (%R8, 0x44) ,%R11       /* X[17]                                 */
  SUB   %R4, %R15               /* X[5]-X[6]                             */
  SUB   %R11, %R15              /* t11 = X[5]-X[6]-X[17]   -> R15        */
  asr   0xc, %R15

  MAC    0x0216, %R12       /* hi:lo =  t0 + K03*t8                  */
  MAC    0x09bd, %R13       /* hi:lo =   ? + K15*t9                  */
  MAC   -(0x0cb1+1), %R14       /* hi:lo =   ? + -K14*t10                */
  MAC   -(0x0fdc+1), %R15       /* hi:lo =   ? + -K02*t11                */
  

/***************************************************************************
 * Register usage
 *    0       1       2       3       4       5       6       7
 *--------------------------------------------------------------------------
 *    t14     T8      T15     t15     X[ 6]   t0      FP      t6
 *==========================================================================    
 *    8       9       10      11      12      13      14      15    hi:lo
 *--------------------------------------------------------------------------
 *    X_ptr   x_ptr   X[12]   X[17]   t8      t9      t10     t11   
 ***************************************************************************
 **************************************************
 * x[7]  = MAD_F_MLZ(hi, lo);
 * x[10] = -x[7];
 ***************************************************/
IMDCT04:  

  mfml  %R11
  ST    %R11, (%R9, 0x1c)        
  NOT   %R11                     /* take 2's complement                  */
  ADDQ  0x1, %R11                /*                                      */
  ST    %R11, (%R9, 0x28)        /* x[10] = -x[7]                        */

/***************************************************************************
 * Register usage
 *    0       1       2       3       4       5       6       7
 *--------------------------------------------------------------------------
 *    t14     T8      T15     t15     X[ 6]   t0      FP      t6
 *==========================================================================    
 *    8       9       10      11      12      13      14      15    hi:lo
 *--------------------------------------------------------------------------
 *    X_ptr   x_ptr   NA      x[10]   t8      t9      t10     t11   
 ***************************************************************************
 * MAD_F_ML0(hi, lo, t8,  -MAD_F(0x0cb19346));
 * MAD_F_MLA(hi, lo, t9,   MAD_F(0x0fdcf549));
 * MAD_F_MLA(hi, lo, t10,  MAD_F(0x0216a2a2));
 * MAD_F_MLA(hi, lo, t11, -MAD_F(0x09bd7ca0));
 * x[19] = x[34] = MAD_F_MLZ(hi, lo) - t0;
 ****************************************************/
IMDCT05:
  MOV   %R12,    %R10            /* To preserve the value of %R12          */
  MUL   -(0x0cb1+1),  %R10      /* hi:lo = t8*-K14                        */
  MAC    (0x0fdc),  %R13      /*                                        */
  MAC    (0x0216),  %R14      /*                                        */
  MAC   -(0x09bd+1),  %R15      
  mfml  %R11
  SUB   %R5, %R11               /* %R7 = %R7 - t0                         */
  ST    %R11, (%R9, 0x88)
  ST    %R11, (%R9, 0x4c)


/***************************************************************************
 * Register usage
 *    0       1       2       3       4       5       6       7
 *--------------------------------------------------------------------------
 *    t14     T8      T15     t15     X[ 6]   t0      FP      t6
 *==========================================================================    
 *    8       9       10      11      12      13      14      15    hi:lo
 *--------------------------------------------------------------------------
 *    X_ptr   x_ptr   NA      x[19]   t8      t9      t10     t11   
 ***************************************************************************
 * t12 = X[0] - X[3] + (T8(X[8] - X[11]) + (T15(X[15]-X[12]));
 ****************************************************/
 
IMDCT06_t12gen:  
  LD    (%R8, 0x0), %R11    /* X[0]  */
  LD    (%R8, 0xC), %R10    /* X[3]  */
  ADD   %R2, %R1            /* X[8]-X[11]+X[15]-X[12]   (T8 +T15)         */
  ADD   %R11, %R1           /* X[0] + X[8] -X[11]+X[15]-X[12]             */
  SUB   %R10, %R1           /* t12 =  X[0]+X[8]-X[11]+X[15]-X[12] - X[3]  */

  
/***************************************************************************
 * Register usage
 *    0       1       2       3       4       5       6       7
 *--------------------------------------------------------------------------
 *    t14     t12     T15     t15     X[ 6]   t0      FP      t6 
 *==========================================================================    
 *    8       9       10      11      12      13      14      15    hi:lo
 *--------------------------------------------------------------------------
 *    X_ptr   x_ptr   X[3]    X[0]    t8      t9      t10     t11   
 ***************************************************************************
 * t13 = X[2] + X[5] - X[6] - X[9]  - X[14] - X[17];
 *************************************************************/

IMDCT07_t13gen:   
  LD    (%R8, 0x08), %R2        /* X[2]                                   */
  LD    (%R8, 0x24), %R10       /* X[9]                                   */
  LD    (%R8, 0x38), %R11       /* X[14]                                  */
  ADD   %R10, %R4               /* X[6]+X[9]                              */
  LD    (%R8, 0x44), %R10       /* X[17]                                  */
  ADD   %R11,%R4                /* X[6]+X[9]+X[14]                        */
  ADD   %R10,%R4                /* X[6]+X[9]+X[14]+X[17]                  */
  LD    (%R8, 0x14), %R11       /* X[5]                                   */  
  SUB   %R4, %R2                /* X[2] - (X[6]+X[9]+X[14]+X[17])         */
  ADD   %R11, %R2               /* X[2]+X[5]- (X[6]+X[9]+X[14]+X[17]) -> t13 */
  
/***************************************************************************
 * Register usage
 *    0       1       2       3       4       5       6       7
 *--------------------------------------------------------------------------
 *    t14     t12     t13     t15     NA      t0      FP      t6
 *==========================================================================    
 *    8       9       10      11      12      13      14      15    hi:lo
 *--------------------------------------------------------------------------
 *    X_ptr   x_ptr   X[17]   X[5 ]   t8      t9      t10     t11   
 ***************************************************************************
 * MAD_F_ML0(hi, lo, t12, -MAD_F(0x0ec835e8));
 * MAD_F_MLA(hi, lo, t13,  MAD_F(0x061f78aa));
 * x[22] = x[31] = MAD_F_MLZ(hi, lo) + t0;
 *************************************************************/

IMDCT08_x31_x22gen:   
  asr   0xc, %R1
  asr   0xc, %R2
  MOV   %R1, %R10               /* %R10 = t12           ???     */
  
  MUL   -(0x0ec8+1), %R10       /* hi:lo = t12 * -K08           */
  MAC    (0x061f), %R2        /* hi:lo = (t12*-K08)+(t13*K09) */
  
  mfml  %R10
  ADD   %R5, %R10
  ST    %R10, (%R9, 0x7c)
  ST    %R10, (%R9, 0x58)
  

/***************************************************************************
 * Register usage
 *    0       1       2       3       4       5       6       7
 *--------------------------------------------------------------------------
 *    t14     t12     t13     t15     NA      t0      FP      t6
 *==========================================================================    
 *    8       9       10      11      12      13      14      15    hi:lo
 *--------------------------------------------------------------------------
 *    X_ptr   x_ptr   x[22]   X[5 ]   t8      t9      t10     t11   
 ***************************************************************************
 * MAD_F_ML0(hi, lo, X[1],  -MAD_F(0x09bd7ca0));
 * MAD_F_MLA(hi, lo, X[7],   MAD_F(0x0216a2a2));
 * MAD_F_MLA(hi, lo, X[10], -MAD_F(0x0fdcf549));
 * MAD_F_MLA(hi, lo, X[16],  MAD_F(0x0cb19346));
 * 
 * t1 = MAD_F_MLZ(hi, lo) + t6;
 *****************************************************************/
IMDCT08_t1gen:
  PUSH  %R0-%R3, %R5, %R7                 /* (iSP - 0x18)      */
  LD    (%R8, 0x04), %R0                  /* X[1]             */
  LD    (%R8, 0x1c), %R1                  /* X[7]             */
  LD    (%R8, 0x28), %R5                  /* X[10]            */
  LD    (%R8, 0x40), %R4                  /* X[16]            */
  asr   0xc, %R0
  asr   0xc, %R1
  asr   0xc, %R5
  asr   0xc, %R4
  
  MUL   -(0x09bd+1), %R0               
  MAC    (0x0216), %R1
  MAC   -(0x0fdc+1), %R5
  MAC    (0x0cb1), %R4
  
  mfml  %R0
  ADD   %R7, %R0                          /* t1               */
  
  PUSH  %R12-%R15                         /* (iSP - 0x28)      */ 
  
  
/***************************************************************************
 * Register usage
 *    0       1       2       3       4       5       6       7
 *--------------------------------------------------------------------------
 *    t1      X7      N/A     t15n    X16     X10   FP      t6n
 *==========================================================================    
 *    8       9       10      11      12      13      14      15    hi:lo
 *--------------------------------------------------------------------------
 *    X_ptr   x_ptr   NA      X[ 5]   t8n     t9n     t10n    t11n  
 ***************************************************************************/
  
IMDCT09_load:  
  LD    (%R8, 0x0), %R10      /* X[0]  */
  LD    (%R8, 0x8), %R3       /* X[2]  */
  LD    (%R8, 0xc), %R5       /* X[3]  */
  LD    (%R8, 0x14), %R2      /* X[5]  */
  LD    (%R8, 0x18), %R4      /* X[6]  */
  LD    (%R8, 0x20), %R1      /* X[8] */
  LD    (%R8, 0x24), %R7      /* X[9]  */
  LD    (%R8, 0x2C), %R12     /* X[11] */
  LD    (%R8, 0x30), %R13     /* X[12] */
  LD    (%R8, 0x38), %R11     /* X[14] */
  LD    (%R8, 0x3c), %R14     /* X[15] */
  LD    (%R8, 0x44), %R15     /* X[17] */
  
  asr   0xc, %R10
  asr   0xc, %R3
  asr   0xc, %R5
  asr   0xc, %R2
  asr   0xc, %R4
  asr   0xc, %R1
  asr   0xc, %R7
  asr   0xc, %R12
  asr   0xc, %R13
  asr   0xc, %R11
  asr   0xc, %R14
  asr   0xc, %R15
  
/***************************************************************************
 * Register usage                                                           
 *    0       1       2       3       4       5       6       7             
 *--------------------------------------------------------------------------
 *    t1      X[0]    X[5]    X[2]    X[ 6]   X[ 3]   FP      X[ 9]         
 *==========================================================================
 *    8       9       10      11      12      13      14      15    hi:lo   
 *--------------------------------------------------------------------------
 *    X_ptr   x_ptr   X[0]    X[14]   X[11]   X[12]   X[15]   X[17]         
 ***************************************************************************
 * MAD_F_ML0(hi, lo, X[0],   MAD_F(0x03768962));
 * MAD_F_MLA(hi, lo, X[2],   MAD_F(0x0e313245));
 * MAD_F_MLA(hi, lo, X[3],  -MAD_F(0x0ffc19fd));
 * MAD_F_MLA(hi, lo, X[5],  -MAD_F(0x0acf37ad));
 * MAD_F_MLA(hi, lo, X[6],   MAD_F(0x04cfb0e2));
 * MAD_F_MLA(hi, lo, X[8],  -MAD_F(0x0898c779));
 * MAD_F_MLA(hi, lo, X[9],   MAD_F(0x0d7e8807));
 * MAD_F_MLA(hi, lo, X[11],  MAD_F(0x0f426cb5));
 * MAD_F_MLA(hi, lo, X[12], -MAD_F(0x0bcbe352));
 * MAD_F_MLA(hi, lo, X[14],  MAD_F(0x00b2aa3e));
 * MAD_F_MLA(hi, lo, X[15], -MAD_F(0x07635284));
 * MAD_F_MLA(hi, lo, X[17], -MAD_F(0x0f9ee890));
 * 
 * x[6]  = MAD_F_MLZ(hi, lo) + t1;
 * x[11] = -x[6];
 *************************************************************/
IMDCT10_X11_gen:    

  MUL    (0x0376),  %R10            /*  X[0]        */
  MAC    (0x0e31),  %R3             /*  X[2]        */
  MAC   -(0x0ffc+1),  %R5             /*  X[3]        */
  MAC   -(0x0acf+1),  %R2             /*  X[5]        */
  MAC    (0x04cf),  %R4             /*  X[6]        */
  MAC   -(0x0898+1),  %R1             /*  X[8]        */
  MAC    (0x0d7e),  %R7             /*  X[9]        */
  MAC    (0x0f42),  %R12            /*  X[11]       */
  MAC   -(0x0bcb+1),  %R13            /*  X[12]       */
  MAC    (0x00b2),  %R11            /*  X[14]       */
  MAC   -(0x0763+1),  %R14            /*  X[15]       */
  MAC   -(0x0f9e+1),  %R15            /*  X[17]       */
  
  mfml  %R10
  ADD   %R0, %R10
  ST    %R10, (%R9, 0x18)          /* x[6]         */
  NOT   %R10
  ADDQ  0x1, %R10
  ST    %R10, (%R9, 0x2c)
  
  LD    (%R8, 0x0), %R10
  asr   0xc, %R10
  

/***************************************************************************
 * Register usage                                                           
 *    0       1       2       3       4       5       6       7             
 *--------------------------------------------------------------------------
 *    t1      X[0]    X[5]    X[2]    X[ 6]   X[ 3]   FP      X[ 9]         
 *==========================================================================
 *    8       9       10      11      12      13      14      15    hi:lo   
 *--------------------------------------------------------------------------
 *    X_ptr   x_ptr   X[0]    X[14]   X[11]   X[12]   X[15]   X[17]         
 ***************************************************************************
 * MAD_F_ML0(hi, lo, X[0],  -MAD_F(0x0f426cb5));
 * MAD_F_MLA(hi, lo, X[2],  -MAD_F(0x00b2aa3e));
 * MAD_F_MLA(hi, lo, X[3],   MAD_F(0x0898c779));
 * MAD_F_MLA(hi, lo, X[5],   MAD_F(0x0f9ee890));
 * MAD_F_MLA(hi, lo, X[6],   MAD_F(0x0acf37ad));
 * MAD_F_MLA(hi, lo, X[8],  -MAD_F(0x07635284));
 * MAD_F_MLA(hi, lo, X[9],  -MAD_F(0x0e313245));
 * MAD_F_MLA(hi, lo, X[11], -MAD_F(0x0bcbe352));
 * MAD_F_MLA(hi, lo, X[12], -MAD_F(0x03768962));
 * MAD_F_MLA(hi, lo, X[14],  MAD_F(0x0d7e8807));
 * MAD_F_MLA(hi, lo, X[15],  MAD_F(0x0ffc19fd));
 * MAD_F_MLA(hi, lo, X[17],  MAD_F(0x04cfb0e2));
 *
 * x[23] = x[30] = MAD_F_MLZ(hi, lo) + t1;
 **************************************************************/
IMDCT11_X23_gen:      
  MUL   -(0x0f42+1), %R10           /*  X[0]        */
  MAC   -(0x00b2+1), %R3            /*  X[2]        */
  MAC    (0x0898), %R5            /*  X[3]        */
  MAC    (0x0f9e), %R2            /*  X[5]        */
  MAC    (0x0acf), %R4            /*  X[6]        */
  MAC   -(0x0763+1), %R1            /*  X[8]        */
  MAC   -(0x0e31+1), %R7            /*  X[9]        */
  MAC   -(0x0bcb+1), %R12           /*  X[11]       */
  MAC   -(0x0376+1), %R13           /*  X[12]       */
  MAC    (0x0d7e), %R11           /*  X[14]       */
  MAC    (0x0ffc), %R14           /*  X[15]       */
  MAC    (0x04cf), %R15           /*  X[17]       */

  mfml  %R10
  ADD   %R0,  %R10
  ST    %R10, (%R9, 0x78)
  ST    %R10, (%R9, 0x5c)
  
  LD    (%R8, 0x0), %R10
  asr   0xc, %R10


/***************************************************************************
 * Register usage                                                           
 *    0       1       2       3       4       5       6       7             
 *--------------------------------------------------------------------------
 *    t1      X[ 8]   X[5]    X[2]    X[ 6]   X[ 3]   FP      X[ 9]         
 *==========================================================================
 *    8       9       10      11      12      13      14      15    hi:lo   
 *--------------------------------------------------------------------------
 *    X_ptr   x_ptr   X[0]    X[14]   X[11]   X[12]   X[15]   X[17]         
 ***************************************************************************
 * MAD_F_ML0(hi, lo, X[0],  -MAD_F(0x0bcbe352));
 * MAD_F_MLA(hi, lo, X[2],   MAD_F(0x0d7e8807));
 * MAD_F_MLA(hi, lo, X[3],  -MAD_F(0x07635284));
 * MAD_F_MLA(hi, lo, X[5],   MAD_F(0x04cfb0e2));
 * MAD_F_MLA(hi, lo, X[6],   MAD_F(0x0f9ee890));
 * MAD_F_MLA(hi, lo, X[8],  -MAD_F(0x0ffc19fd));
 * MAD_F_MLA(hi, lo, X[9],  -MAD_F(0x00b2aa3e));
 * MAD_F_MLA(hi, lo, X[11],  MAD_F(0x03768962));
 * MAD_F_MLA(hi, lo, X[12], -MAD_F(0x0f426cb5));
 * MAD_F_MLA(hi, lo, X[14],  MAD_F(0x0e313245));
 * MAD_F_MLA(hi, lo, X[15],  MAD_F(0x0898c779));
 * MAD_F_MLA(hi, lo, X[17], -MAD_F(0x0acf37ad));
 *
 * x[18] = x[35] = MAD_F_MLZ(hi, lo) - t1;
 *************************************************************/
IMDCT12_X18_gen:   
  MUL   -(0x0bcb+1),  %R10           /*  X[0]        */
  MAC    (0x0d7e),  %R3            /*  X[2]        */
  MAC   -(0x0763+1),  %R5            /*  X[3]        */
  MAC    (0x04cf),  %R2            /*  X[5]        */
  MAC    (0x0f9e),  %R4            /*  X[6]        */
  MAC   -(0x0ffc+1),  %R1            /*  X[8]        */
  MAC   -(0x00b2+1),  %R7            /*  X[9]        */
  MAC    (0x0376),  %R12           /*  X[11]       */
  MAC   -(0x0f42+1),  %R13           /*  X[12]       */
  MAC    (0x0e31),  %R11           /*  X[14]       */
  MAC    (0x0898),  %R14           /*  X[15]       */
  MAC   -(0x0acf+1),  %R15           /*  X[17]       */
        
  mfml  %R10
  SUB   %R0,  %R10
  ST    %R10, (%R9, 0x48)
  ST    %R10, (%R9, 0x8c)


/***************************************************************************
 * Register usage                                                           
 *    0       1       2       3       4       5       6       7             
 *--------------------------------------------------------------------------
 *    t1      X8      X5      X2      X6      X3      FP      X9            
 *==========================================================================
 *    8       9       10      11      12      13      14      15    hi:lo   
 *--------------------------------------------------------------------------
 *    X_ptr   x_ptr   NA      X14     X11     X12     X15     X17           
 ***************************************************************************
 ********************************************************
 *  MAD_F_ML0(hi, lo, X[4],   MAD_F(0x061f78aa));
 *  MAD_F_MLA(hi, lo, X[13], -MAD_F(0x0ec835e8));
 *  
 *  t7 = MAD_F_MLZ(hi, lo);
 *********************************************************/
IMDCT13_t7_gen:    
  LD    (%R8, 0x10), %R10             /* X[4]                       */
  LD    (%R8, 0x34), %R11             /* X[13]                      */
  asr   0xc, %R10
  asr   0xc, %R11
  MUL    0x061f, %R10                 /* X[4] * K                   */
  MAC   -(0x0ec8+1), %R11                 /* t7 = X[4]*K + X[13]*-K     */

  mfml  %R11

/***************************************************************************
 * Register usage                                                           
 *    0       1       2       3       4       5       6       7             
 *--------------------------------------------------------------------------
 *    t1      X0      X[5]    X[2]    X[ 6]   X[ 3]   FP      X[ 9]         
 *==========================================================================
 *    8       9       10      11      12      13      14      15    hi:lo   
 *--------------------------------------------------------------------------
 *    X_ptr   x_ptr   NA      t7      X[11]   X[12]   X[15]   X[17]         
 ***************************************************************************  
 *  MAD_F_MLA(hi, lo, X[1],  -MAD_F(0x0cb19346));
 *  MAD_F_MLA(hi, lo, X[7],   MAD_F(0x0fdcf549));
 *  MAD_F_MLA(hi, lo, X[10],  MAD_F(0x0216a2a2));
 *  MAD_F_MLA(hi, lo, X[16], -MAD_F(0x09bd7ca0));
 *
 *  t2 = MAD_F_MLZ(hi, lo);
 **********************************************************/
IMDCT14_t2_gen:
  PUSH  %R11                  /* iSP - 0x2c */
  
  LD    (%R8, 0x04), %R10     /* X[1]  */
  LD    (%R8, 0x1c), %R11     /* X[7]  */
  asr   0xc, %R10
  asr   0xc, %R11
  MAC   -(0x0cb1+1), %R10
  MAC    0x0fdc, %R11
  
  LD    (%R8, 0x28), %R10     /* X[10] */
  LD    (%R8, 0x40), %R11     /* X[16] */
  asr   0xc, %R10
  asr   0xc, %R11
  MAC    0x0216, %R10
  MAC   -(0x09bd+1), %R11
  
  mfml  %R0

/***************************************************************************
 * Register usage                                                           
 *    0       1       2       3       4       5       6       7             
 *--------------------------------------------------------------------------
 *    t2      X0      X[5]    X[2]    X[ 6]   X[ 3]   FP      X[ 9]         
 *==========================================================================
 *    8       9       10      11      12      13      14      15    hi:lo   
 *--------------------------------------------------------------------------
 *    X_ptr   x_ptr   X10     X16     X[11]   X[12]   X[15]   X[17]         
 ***************************************************************************  
 * MAD_F_MLA(hi, lo, X[0],   MAD_F(0x04cfb0e2));
 * MAD_F_MLA(hi, lo, X[2],   MAD_F(0x0ffc19fd));
 * MAD_F_MLA(hi, lo, X[3],  -MAD_F(0x0d7e8807));
 * MAD_F_MLA(hi, lo, X[5],   MAD_F(0x03768962));
 * MAD_F_MLA(hi, lo, X[6],  -MAD_F(0x0bcbe352));
 * MAD_F_MLA(hi, lo, X[8],  -MAD_F(0x0e313245));
 * MAD_F_MLA(hi, lo, X[9],   MAD_F(0x07635284));
 * MAD_F_MLA(hi, lo, X[11], -MAD_F(0x0acf37ad));
 * MAD_F_MLA(hi, lo, X[12],  MAD_F(0x0f9ee890));
 * MAD_F_MLA(hi, lo, X[14],  MAD_F(0x0898c779));
 * MAD_F_MLA(hi, lo, X[15],  MAD_F(0x00b2aa3e));
 * MAD_F_MLA(hi, lo, X[17],  MAD_F(0x0f426cb5));
 * 
 * x[5]  = MAD_F_MLZ(hi, lo);
 * x[12] = -x[5];
 ***************************************************************************/
IMDCT15_X5_X12_gen:
  LD    (%R8, 0x0),   %R10              
  LD    (%R8, 0x38),  %R11              /* X[14]              */
  asr   0xc,  %R10
  asr   0xc,  %R11
                                        
  MAC    (0x04cf),  %R10              /* X[0]*Kx            */
  MAC    (0x0ffc),  %R3               /* X[2]*Kx            */                  
  MAC   -(0x0d7e+1),  %R5               /* X[3]*Kx            */
  MAC    (0x0376),  %R2               /* X[5]*Kx            */
  MAC   -(0x0bcb+1),  %R4               /* X[6]*Kx            */
  MAC   -(0x0e31+1),  %R1               /* X[8]*Kx            */
  MAC    (0x0763),  %R7               /* X[9]*Kx            */
  MAC   -(0x0acf+1),  %R12              /* X[11]*Kx           */
  MAC    (0x0f9e),  %R13              /* X[12]*Kx           */
  MAC    (0x0898),  %R11              /* X[14]*Kx           */
  MAC    (0x00b2),  %R14              /* X[15]*Kx           */
  MAC    (0x0f42),  %R15              /* X[17]*Kx           */
  
  mfml  %R10
  ST    %R10,(%R9, 0x14)                /* x[5] store         */
  NOT   %R10
  ADDQ  0x1, %R10
  ST    %R10,(%R9, 0x30)                /* x[12]              */
  LD    (%R8, 0x0),  %R10               /* Reload X[0]        */
  asr   0xc,%R10
  
/***************************************************************************
 * Register usage                                                           
 *    0       1       2       3       4       5       6       7             
 *--------------------------------------------------------------------------
 *    t2      X[8]    X[5]    X[2]    X[ 6]   X[ 3]   FP      X[ 9]         
 *==========================================================================
 *    8       9       10      11      12      13      14      15    hi:lo   
 *--------------------------------------------------------------------------
 *    X_ptr   x_ptr   X[0]    X[14]   X[11]   X[12]   X[15]   X[17]         
 ***************************************************************************
 * MAD_F_ML0(hi, lo, X[0],   MAD_F(0x0acf37ad));
 * MAD_F_MLA(hi, lo, X[2],  -MAD_F(0x0898c779));
 * MAD_F_MLA(hi, lo, X[3],   MAD_F(0x0e313245));
 * MAD_F_MLA(hi, lo, X[5],  -MAD_F(0x0f426cb5));
 * MAD_F_MLA(hi, lo, X[6],  -MAD_F(0x03768962));
 * MAD_F_MLA(hi, lo, X[8],   MAD_F(0x00b2aa3e));
 * MAD_F_MLA(hi, lo, X[9],  -MAD_F(0x0ffc19fd));
 * MAD_F_MLA(hi, lo, X[11],  MAD_F(0x0f9ee890));
 * MAD_F_MLA(hi, lo, X[12], -MAD_F(0x04cfb0e2));
 * MAD_F_MLA(hi, lo, X[14],  MAD_F(0x07635284));
 * MAD_F_MLA(hi, lo, X[15],  MAD_F(0x0d7e8807));
 * MAD_F_MLA(hi, lo, X[17], -MAD_F(0x0bcbe352));
 * 
 * x[0]  = MAD_F_MLZ(hi, lo) + t2;
 * x[17] = -x[0];
 *******************************************************/
IMDCT16_X0_X17_gen:
  MUL    (0x0acf),  %R10            /* X[0]*Kx            */
  MAC   -(0x0898+1),  %R3             /* X[2]*Kx            */
  MAC    (0x0e31),  %R5             /* X[3]*Kx            */
  MAC   -(0x0f42+1),  %R2             /* X[5]*Kx            */
  MAC   -(0x0376+1),  %R4             /* X[6]*Kx            */
  MAC    (0x00b2),  %R1             /* X[8]*Kx            */
  MAC   -(0x0ffc+1),  %R7             /* X[9]*Kx            */
  MAC    (0x0f9e),  %R12            /* X[11]*Kx           */
  MAC   -(0x04cf+1),  %R13            /* X[12]*Kx           */
  MAC    (0x0763),  %R11            /* X[14]*Kx           */
  MAC    (0x0d7e),  %R14            /* X[15]*Kx           */
  MAC   -(0x0bcb+1),  %R15            /* X[17]*Kx           */
  
  mfml  %R10
  ADD   %R0, %R10                      /* result + t2        */
  ST    %R10, (%R9, 0x0)               /* x[0]               */
  NOT   %R10
  ADDQ  0x1, %R10
  ST    %R10, (%R9, 0x44)              /* x[17]              */
  LD    (%R8, 0x0),  %R10               /* Reload X[0]        */
  asr   0xc, %R10


/***************************************************************************
 * Register usage                                                           
 *    0       1       2       3       4       5       6       7             
 *--------------------------------------------------------------------------
 *    t2      X[ 8]   X[5]    X[2]    X[ 6]   X[ 3]   FP      X[ 9]         
 *==========================================================================
 *    8       9       10      11      12      13      14      15    hi:lo   
 *--------------------------------------------------------------------------
 *    X_ptr   x_ptr   X[0]    X[14]   X[11]   X[12]   X[15]   X[17]         
 ***************************************************************************  
 * MAD_F_ML0(hi, lo, X[0],  -MAD_F(0x0f9ee890));
 * MAD_F_MLA(hi, lo, X[2],  -MAD_F(0x07635284));
 * MAD_F_MLA(hi, lo, X[3],  -MAD_F(0x00b2aa3e));
 * MAD_F_MLA(hi, lo, X[5],   MAD_F(0x0bcbe352));
 * MAD_F_MLA(hi, lo, X[6],   MAD_F(0x0f426cb5));
 * MAD_F_MLA(hi, lo, X[8],   MAD_F(0x0d7e8807));
 * MAD_F_MLA(hi, lo, X[9],   MAD_F(0x0898c779));
 * MAD_F_MLA(hi, lo, X[11], -MAD_F(0x04cfb0e2));
 * MAD_F_MLA(hi, lo, X[12], -MAD_F(0x0acf37ad));
 * MAD_F_MLA(hi, lo, X[14], -MAD_F(0x0ffc19fd));
 * MAD_F_MLA(hi, lo, X[15], -MAD_F(0x0e313245));
 * MAD_F_MLA(hi, lo, X[17], -MAD_F(0x03768962));
 * 
 * x[24] = x[29] = MAD_F_MLZ(hi, lo) + t2;
 *******************************************************/
IMDCT17_X24_X29_gen:  
  MUL   -(0x0f9e+1),  %R10            /* X[0]*Kx            */
  MAC   -(0x0763+1),  %R3             /* X[2]*Kx            */
  MAC   -(0x00b2+1),  %R5             /* X[3]*Kx            */
  MAC    (0x0bcb),  %R2             /* X[5]*Kx            */
  MAC    (0x0f42),  %R4             /* X[6]*Kx            */
  MAC    (0x0d7e),  %R1             /* X[8]*Kx            */
  MAC    (0x0898),  %R7             /* X[9]*Kx            */
  MAC   -(0x04cf+1),  %R12            /* X[11]*Kx           */
  MAC   -(0x0acf+1),  %R13            /* X[12]*Kx           */
  MAC   -(0x0ffc+1),  %R11            /* X[14]*Kx           */
  MAC   -(0x0e31+1),  %R14            /* X[15]*Kx           */
  MAC   -(0x0376+1),  %R15            /* X[17]*Kx           */
  
  mfml  %R10
  ADD   %R0, %R10
  ST    %R10, (%R9, 0x74)              /* x[29]              */
  ST    %R10, (%R9, 0x60)              /* x[24]              */
  
/***************************************************************************
 * Register usage                                                           
 *    0       1       2       3       4       5       6       7             
 *--------------------------------------------------------------------------
 *    t2      x[24]   X[5]    X[2]    X[ 6]   X[ 3]   FP      X[ 9]         
 *==========================================================================
 *    8       9       10      11      12      13      14      15    hi:lo   
 *--------------------------------------------------------------------------
 *    X_ptr   x_ptr   NA    X[14]   X[11]   X[12]   X[15]   X[17]         
 ***************************************************************************
 * MAD_F_ML0(hi, lo, X[1],  -MAD_F(0x0216a2a2));
 * MAD_F_MLA(hi, lo, X[7],  -MAD_F(0x09bd7ca0));
 * MAD_F_MLA(hi, lo, X[10],  MAD_F(0x0cb19346));
 * MAD_F_MLA(hi, lo, X[16],  MAD_F(0x0fdcf549));
 * 
 * t3 = MAD_F_MLZ(hi, lo) + t7;
 ***************************************************/
IMDCT18_t3_gen: 
  LD    (%SP, 0x0),   %R0           /* t7 load, t2 vanished */
  LD    (%R8, 0x04),  %R10          /* X[1]  */
  LD    (%R8, 0x1c),  %R1           /* X[7]  */
  asr   0xc, %R10
  asr   0xc, %R1
  MUL   -(0x0216+1),  %R10
  MAC   -(0x09bd+1),  %R1
  LD    (%R8, 0x28),  %R10          /* X[10] */
  LD    (%R8, 0x40),  %R1           /* X[16] */
  asr   0xc, %R10
  asr   0xc, %R1
  MAC   0x0cb1,   %R10 
  MAC   0x0fdc,   %R1 
  
  mfml    %R1
  ADD     %R1, %R0                  /* t3 generated, t7 vanished */
  LD    (%R8, 0x0),  %R10
  LD    (%R8, 0x20), %R1                /* Reload X[8]        */
  asr   0xc, %R10
  asr   0xc, %R1

/***************************************************************************
 * Register usage                                                           
 *    0       1       2       3       4       5       6       7             
 *--------------------------------------------------------------------------
 *    t3      X[8]    X[5]    X[2]    X[ 6]   X[ 3]   FP      X[ 9]         
 *==========================================================================
 *    8       9       10      11      12      13      14      15    hi:lo   
 *--------------------------------------------------------------------------
 *    X_ptr   x_ptr   X[0]    X[14]   X[11]   X[12]   X[15]   X[17]         
 ***************************************************************************  
 * MAD_F_ML0(hi, lo, X[0],   MAD_F(0x00b2aa3e));
 * MAD_F_MLA(hi, lo, X[2],   MAD_F(0x03768962));
 * MAD_F_MLA(hi, lo, X[3],  -MAD_F(0x04cfb0e2));
 * MAD_F_MLA(hi, lo, X[5],  -MAD_F(0x07635284));
 * MAD_F_MLA(hi, lo, X[6],   MAD_F(0x0898c779));
 * MAD_F_MLA(hi, lo, X[8],   MAD_F(0x0acf37ad));
 * MAD_F_MLA(hi, lo, X[9],  -MAD_F(0x0bcbe352));
 * MAD_F_MLA(hi, lo, X[11], -MAD_F(0x0d7e8807));
 * MAD_F_MLA(hi, lo, X[12],  MAD_F(0x0e313245));
 * MAD_F_MLA(hi, lo, X[14],  MAD_F(0x0f426cb5));
 * MAD_F_MLA(hi, lo, X[15], -MAD_F(0x0f9ee890));
 * MAD_F_MLA(hi, lo, X[17], -MAD_F(0x0ffc19fd));
 * 
 * x[8] = MAD_F_MLZ(hi, lo) + t3;
 * x[9] = -x[8];
 ***************************************************************************/
IMDCT19_X8X9_gen: 
  MUL    (0x00b2),  %R10            /* X[0]*Kx            */
  MAC    (0x0376),  %R3             /* X[2]*Kx            */
  MAC   -(0x04cf+1),  %R5             /* X[3]*Kx            */
  MAC   -(0x0763+1),  %R2             /* X[5]*Kx            */
  MAC    (0x0898),  %R4             /* X[6]*Kx            */
  MAC    (0x0acf),  %R1             /* X[8]*Kx            */
  MAC   -(0x0bcb+1),  %R7             /* X[9]*Kx            */
  MAC   -(0x0d7e+1),  %R12            /* X[11]*Kx           */
  MAC    (0x0e31),  %R13            /* X[12]*Kx           */
  MAC    (0x0f42),  %R11            /* X[14]*Kx           */
  MAC   -(0x0f9e+1),  %R14            /* X[15]*Kx           */
  MAC   -(0x0ffc+1),  %R15            /* X[17]*Kx           */
  
  mfml  %R10
  ADD   %R0, %R10                     /* MLZ + t3           */
  ST    %R10, (%R9, 0x20)              /* x[8]               */
  NOT   %R10
  ADDQ  0x1, %R10                      /* x[9]               */
  ST    %R10, (%R9, 0x24)
  LD    (%R8, 0x0),  %R10
  asr   0xc, %R10
  
  
/***************************************************************************
 * Register usage                                                           
 *    0       1       2       3       4       5       6       7             
 *--------------------------------------------------------------------------
 *    t3      x[8]    X[5]    X[2]    X[ 6]   X[ 3]   FP      X[ 9]         
 *==========================================================================
 *    8       9       10      11      12      13      14      15    hi:lo   
 *--------------------------------------------------------------------------
 *    X_ptr   x_ptr   X[0]    X[14]   X[11]   X[12]   X[15]   X[17]         
 ***************************************************************************
 * MAD_F_ML0(hi, lo, X[0],  -MAD_F(0x0e313245));
 * MAD_F_MLA(hi, lo, X[2],   MAD_F(0x0bcbe352));
 * MAD_F_MLA(hi, lo, X[3],   MAD_F(0x0f9ee890));
 * MAD_F_MLA(hi, lo, X[5],  -MAD_F(0x0898c779));
 * MAD_F_MLA(hi, lo, X[6],  -MAD_F(0x0ffc19fd));
 * MAD_F_MLA(hi, lo, X[8],   MAD_F(0x04cfb0e2));
 * MAD_F_MLA(hi, lo, X[9],   MAD_F(0x0f426cb5));
 * MAD_F_MLA(hi, lo, X[11], -MAD_F(0x00b2aa3e));
 * MAD_F_MLA(hi, lo, X[12], -MAD_F(0x0d7e8807));
 * MAD_F_MLA(hi, lo, X[14], -MAD_F(0x03768962));
 * MAD_F_MLA(hi, lo, X[15],  MAD_F(0x0acf37ad));
 * MAD_F_MLA(hi, lo, X[17],  MAD_F(0x07635284));
 * 
 * x[21] = x[32] = MAD_F_MLZ(hi, lo) + t3;
 ***************************************************************/
IMDCT20_X21X32_gen:   
  MUL   -(0x0e31+1),  %R10            /* X[0]*Kx            */
  MAC    (0x0bcb),  %R3             /* X[2]*Kx            */
  MAC    (0x0f9e),  %R5             /* X[3]*Kx            */
  MAC   -(0x0898+1),  %R2             /* X[5]*Kx            */
  MAC   -(0x0ffc+1),  %R4             /* X[6]*Kx            */
  MAC    (0x04cf),  %R1             /* X[8]*Kx            */
  MAC    (0x0f42),  %R7             /* X[9]*Kx            */
  MAC   -(0x00b2+1),  %R12            /* X[11]*Kx           */
  MAC   -(0x0d7e+1),  %R13            /* X[12]*Kx           */
  MAC   -(0x0376+1),  %R11            /* X[14]*Kx           */
  MAC    (0x0acf),  %R14            /* X[15]*Kx           */
  MAC    (0x0763),  %R15            /* X[17]*Kx           */
  
  mfml  %R10
  ADD   %R0, %R10
  ST    %R10, (%R9, 0x80)
  ST    %R10, (%R9, 0x54)
  LD    (%R8, 0x0),  %R10
  asr   0xc, %R10

/***************************************************************************
 * Register usage                                                           
 *    0       1       2       3       4       5       6       7             
 *--------------------------------------------------------------------------
 *    t3      X[8]    X[5]    X[2]    X[ 6]   X[ 3]   FP      X[ 9]         
 *==========================================================================
 *    8       9       10      11      12      13      14      15    hi:lo   
 *--------------------------------------------------------------------------
 *    X_ptr   x_ptr   X[0]    X[14]   X[11]   X[12]   X[15]   X[17]         
 ***************************************************************************
 * MAD_F_ML0(hi, lo, X[0],  -MAD_F(0x0d7e8807));
 * MAD_F_MLA(hi, lo, X[2],   MAD_F(0x0f426cb5));
 * MAD_F_MLA(hi, lo, X[3],   MAD_F(0x0acf37ad));
 * MAD_F_MLA(hi, lo, X[5],  -MAD_F(0x0ffc19fd));
 * MAD_F_MLA(hi, lo, X[6],  -MAD_F(0x07635284));
 * MAD_F_MLA(hi, lo, X[8],   MAD_F(0x0f9ee890));
 * MAD_F_MLA(hi, lo, X[9],   MAD_F(0x03768962));
 * MAD_F_MLA(hi, lo, X[11], -MAD_F(0x0e313245));
 * MAD_F_MLA(hi, lo, X[12],  MAD_F(0x00b2aa3e));
 * MAD_F_MLA(hi, lo, X[14],  MAD_F(0x0bcbe352));
 * MAD_F_MLA(hi, lo, X[15], -MAD_F(0x04cfb0e2));
 * MAD_F_MLA(hi, lo, X[17], -MAD_F(0x0898c779));
 * 
 * x[20] = x[33] = MAD_F_MLZ(hi, lo) - t3;
 *************************************************************/
IMDCT21_X20X33_gen:     
  MUL   -(0x0d7e+1),  %R10            /* X[0]*Kx            */
  MAC    (0x0f42),  %R3             /* X[2]*Kx            */
  MAC    (0x0acf),  %R5             /* X[3]*Kx            */
  MAC   -(0x0ffc+1),  %R2             /* X[5]*Kx            */
  MAC   -(0x0763+1),  %R4             /* X[6]*Kx            */
  MAC    (0x0f9e),  %R1             /* X[8]*Kx            */
  MAC    (0x0376),  %R7             /* X[9]*Kx            */
  MAC   -(0x0e31+1),  %R12            /* X[11]*Kx           */
  MAC    (0x00b2),  %R13            /* X[12]*Kx           */
  MAC    (0x0bcb),  %R11            /* X[14]*Kx           */
  MAC   -(0x04cf+1),  %R14            /* X[15]*Kx           */
  MAC   -(0x0898+1),  %R15            /* X[17]*Kx           */

  mfml  %R10
  SUB   %R0, %R10
  ST    %R10, (%R9, 0x84)         /* x[33]              */
  ST    %R10, (%R9, 0x50)         /* x[20]              */
  
/***************************************************************************
 * Register usage                                                           
 *    0       1       2       3       4       5       6       7             
 *--------------------------------------------------------------------------
 *    t3      x[21]   X[5]    X[2]    X[ 6]   X[ 3]   FP      X[ 9]         
 *==========================================================================
 *    8       9       10      11      12      13      14      15    hi:lo   
 *--------------------------------------------------------------------------
 *    X_ptr   x_ptr   X[0]    X[14]   X[11]   X[12]   X[15]   X[17]         
 ***************************************************************************  
 * MAD_F_ML0(hi, lo, t14, -MAD_F(0x0ec835e8));
 * MAD_F_MLA(hi, lo, t15,  MAD_F(0x061f78aa));
 * 
 * t4 = MAD_F_MLZ(hi, lo) - t7;
 ************************************************************/
IMDCT22_1_t4_gen:     
  LD    (%SP, 0x14),  %R10       /* %R10 = t14      */
  LD    (%SP, 0x20),  %R1        /* %R1  = t15      */
  MUL   -(0x0ec8+1),  %R10
  MAC    0x061f,  %R1
  POP   %R0                      /* t7 POP: iSP - 0x28      */

  mfml  %R1
  SUB   %R0, %R1               /* t4 = %R2(MLZ) - %R0(t7) */

/***************************************************************************
 * Register usage                                                           
 *    0       1       2       3       4       5       6       7             
 *--------------------------------------------------------------------------
 *    t7      t4      X[5]    X[2]    X[ 6]   X[ 3]   FP      X[ 9]         
 *==========================================================================
 *    8       9       10      11      12      13      14      15    hi:lo   
 *--------------------------------------------------------------------------
 *    X_ptr   x_ptr   N/A     X[14]   X[11]   X[12]   X[15]   X[17]         
 ***************************************************************************  
 * MAD_F_ML0(hi, lo, t12, MAD_F(0x061f78aa));
 * MAD_F_MLA(hi, lo, t13, MAD_F(0x0ec835e8));
 *
 * x[4]  = MAD_F_MLZ(hi, lo) + t4;
 * x[13] = -x[4];
 *************************************************************/
IMDCT22_X4X13_gen:  
  LD    (%SP, 0x14),  %R10        /* load t12       */
  LD    (%SP, 0x18),  %R0         /* load t13       */
  MUL   0x061f, %R10
  MAC   0x0ec8, %R0
  
  mfml  %R0
  ADD   %R1, %R0                  /* x[4] = MLZ + t4      */
  ST    %R0, (%R9, 0x10)          
  NOT   %R0
  ADDQ  0x01, %R0
  ST    %R0, (%R9, 0x34)          /* x[13] = -x[4]        */
   
/***************************************************************************
 * Register usage                                                           
 *    0       1       2       3       4       5       6       7             
 *--------------------------------------------------------------------------
 *    x[13]   t4      X[5]    X[2]    X[ 6]   X[ 3]   FP      X[ 9]         
 *==========================================================================
 *    8       9       10      11      12      13      14      15    hi:lo   
 *--------------------------------------------------------------------------
 *    X_ptr   x_ptr   N/A     X[14]   X[11]   X[12]   X[15]   X[17]         
 ***************************************************************************    
 * MAD_F_ML0(hi, lo, t8,   MAD_F(0x09bd7ca0));
 * MAD_F_MLA(hi, lo, t9,  -MAD_F(0x0216a2a2));
 * MAD_F_MLA(hi, lo, t10,  MAD_F(0x0fdcf549));
 * MAD_F_MLA(hi, lo, t11, -MAD_F(0x0cb19346));
 * 
 * x[1]  = MAD_F_MLZ(hi, lo) + t4;
 * x[16] = -x[1];
 **************************************************************************/
IMDCT23_X1X16_gen:
  POP   %R0, %R2, %R3, %R4      /* %R0: t8, %R2: t9, %R3: t10, %R4: t11   */
                                /* iSP - 0x18     */
  MOV   %R0, %R10
  MUL    0x09bd, %R10
  MAC   -(0x0216+1), %R2
  MAC    0x0fdc, %R3
  MAC   -(0x0cb1+1), %R4
  
  mfml  %R10
  ADD   %R1, %R10               /* x[1] = MLZ + t4              */
  ST    %R10, (%R9, 0x04)
  NOT   %R10
  ADDQ  0x1, %R10
  ST    %R10, (%R9, 0x40)       /* x[16] = -x[1]                 */


/***************************************************************************
 * Register usage                                                           
 *    0       1       2       3       4       5       6       7             
 *--------------------------------------------------------------------------
 *    t8      t4      t9      t10     t11     X[ 3]   FP      X[ 9]         
 *==========================================================================
 *    8       9       10      11      12      13      14      15    hi:lo   
 *--------------------------------------------------------------------------
 *    X_ptr   x_ptr   N/A     x[16]   X[11]   X[12]   X[15]   X[17]         
 ***************************************************************************    
 * MAD_F_ML0(hi, lo, t8,  -MAD_F(0x0fdcf549));
 * MAD_F_MLA(hi, lo, t9,  -MAD_F(0x0cb19346));
 * MAD_F_MLA(hi, lo, t10, -MAD_F(0x09bd7ca0));
 * MAD_F_MLA(hi, lo, t11, -MAD_F(0x0216a2a2));
 *
 * x[25] = x[28] = MAD_F_MLZ(hi, lo) + t4;
 ***************************************************************************/
IMDCT24_X25X28_gen:

  MUL   -(0x0fdc+1), %R0
  MAC   -(0x0cb1+1), %R2
  MAC   -(0x09bd+1), %R3
  MAC   -(0x0216+1), %R4
  
  mfml  %R10
  ADD   %R1, %R10
  ST    %R10, (%R9, 0x70)
  ST    %R10, (%R9, 0x64)
  
/***************************************************************************
 * Register usage                                                           
 *    0       1       2       3       4       5       6       7             
 *--------------------------------------------------------------------------
 *    NA      t4      t9      t10     t11     X[ 3]   FP      X[ 9]         
 *==========================================================================
 *    8       9       10      11      12      13      14      15    hi:lo   
 *--------------------------------------------------------------------------
 *    X_ptr   x_ptr   N/A     x[25]   X[11]   X[12]   X[15]   X[17]         
 ***************************************************************************
 * MAD_F_ML0(hi, lo, X[1],  -MAD_F(0x0fdcf549));
 * MAD_F_MLA(hi, lo, X[7],  -MAD_F(0x0cb19346));
 * MAD_F_MLA(hi, lo, X[10], -MAD_F(0x09bd7ca0));
 * MAD_F_MLA(hi, lo, X[16], -MAD_F(0x0216a2a2));
 *
 * t5 = MAD_F_MLZ(hi, lo) - t6;
 **************************************************/  
IMDCT25_t5_gen:
  LD    (%R8, 0x04), %R0        /* X[1]   */
  LD    (%R8, 0x1C), %R1        /* X[7]   */
  LD    (%R8, 0x28), %R2        /* X[10]  */
  LD    (%R8, 0x40), %R3        /* X[16]  */
  asr   0xc, %R0
  asr   0xc, %R1
  asr   0xc, %R2
  asr   0xc, %R3
  LD    (%SP, 0x14), %R4        /* t6     */
  
  MUL   -(0x0fdc+1), %R0
  MAC   -(0x0cb1+1), %R1
  MAC   -(0x09bd+1), %R2
  MAC   -(0x0216+1), %R3
  
  mfml    %R0
  SUB     %R4, %R0              /* t5 = MLZ - t6 */

/***************************************************************************
 * Register usage                                                           
 *    0       1       2       3       4       5       6       7             
 *--------------------------------------------------------------------------
 *    t5      X[7]    X[10]   X[16]   t6      X[ 3]   FP      X[ 9]         
 *==========================================================================
 *    8       9       10      11      12      13      14      15    hi:lo   
 *--------------------------------------------------------------------------
 *    X_ptr   x_ptr   N/A     x[25]   X[11]   X[12]   X[15]   X[17]         
 ***************************************************************************  
 * MAD_F_ML0(hi, lo, X[0],   MAD_F(0x0898c779));
 * MAD_F_MLA(hi, lo, X[2],   MAD_F(0x04cfb0e2));
 * MAD_F_MLA(hi, lo, X[3],   MAD_F(0x0bcbe352));
 * MAD_F_MLA(hi, lo, X[5],   MAD_F(0x00b2aa3e));
 * MAD_F_MLA(hi, lo, X[6],   MAD_F(0x0e313245));
 * MAD_F_MLA(hi, lo, X[8],  -MAD_F(0x03768962));
 * MAD_F_MLA(hi, lo, X[9],   MAD_F(0x0f9ee890));
 * MAD_F_MLA(hi, lo, X[11], -MAD_F(0x07635284));
 * MAD_F_MLA(hi, lo, X[12],  MAD_F(0x0ffc19fd));
 * MAD_F_MLA(hi, lo, X[14], -MAD_F(0x0acf37ad));
 * MAD_F_MLA(hi, lo, X[15],  MAD_F(0x0f426cb5));
 * MAD_F_MLA(hi, lo, X[17], -MAD_F(0x0d7e8807));
 * 
 * x[2]  = MAD_F_MLZ(hi, lo) + t5;
 * x[15] = -x[2];
 ***************************************************************************/
IMDCT26_X15X2_gen: 
  LD    (%R8, 0x00), %R10           /* X[0]  */
  LD    (%R8, 0x08), %R3            /* X[2]  */
  LD    (%R8, 0x14), %R2            /* X[5]  */
  LD    (%R8, 0x18), %R4            /* X[6]  */
  LD    (%R8, 0x20), %R1            /* X[8]  */
  asr   0xc, %R10
  asr   0xc, %R3
  asr   0xc, %R2
  asr   0xc, %R4
  asr   0xc, %R1

  MUL    (0x0898),  %R10          /* X[0]*Kx            */
  MAC    (0x04cf),  %R3           /* X[2]*Kx            */
  MAC    (0x0bcb),  %R5           /* X[3]*Kx            */
  MAC    (0x00b2),  %R2           /* X[5]*Kx            */
  MAC    (0x0e31),  %R4           /* X[6]*Kx            */
  MAC   -(0x0376+1),  %R1           /* X[8]*Kx            */
  MAC    (0x0f9e),  %R7           /* X[9]*Kx            */
  MAC   -(0x0763+1),  %R12          /* X[11]*Kx           */
  MAC    (0x0ffc),  %R13          /* X[12]*Kx           */
  MAC   -(0x0acf+1),  %R11          /* X[14]*Kx           */
  MAC    (0x0f42),  %R14          /* X[15]*Kx           */
  MAC   -(0x0d7e+1),  %R15          /* X[17]*Kx           */
 
  mfml  %R10

  ADD   %R0, %R10
  ST    %R10, (%R9, 0x08)            /* x[2] = MLZ + t5    */
  NOT   %R10
  ADDQ  0x1, %R10
  ST    %R10, (%R9, 0x3c)            /* x[15] = -x[2]       */
  
  LD    (%R8, 0x00), %R10           /* X[0]  */
  asr   0xc, %R10
  
/***************************************************************************
 * Register usage                                                           
 *    0       1       2       3       4       5       6       7             
 *--------------------------------------------------------------------------
 *    t5      X[8]    X[5]   X[2]     X[6]    X[ 3]   FP      X[ 9]         
 *==========================================================================
 *    8       9       10      11      12      13      14      15    hi:lo   
 *--------------------------------------------------------------------------
 *    X_ptr   x_ptr   X[0]    X[14]   X[11]   X[12]   X[15]   X[17]         
 ***************************************************************************
 * MAD_F_ML0(hi, lo, X[0],   MAD_F(0x07635284));
 * MAD_F_MLA(hi, lo, X[2],   MAD_F(0x0acf37ad));
 * MAD_F_MLA(hi, lo, X[3],   MAD_F(0x03768962));
 * MAD_F_MLA(hi, lo, X[5],   MAD_F(0x0d7e8807));
 * MAD_F_MLA(hi, lo, X[6],  -MAD_F(0x00b2aa3e));
 * MAD_F_MLA(hi, lo, X[8],   MAD_F(0x0f426cb5));
 * MAD_F_MLA(hi, lo, X[9],  -MAD_F(0x04cfb0e2));
 * MAD_F_MLA(hi, lo, X[11],  MAD_F(0x0ffc19fd));
 * MAD_F_MLA(hi, lo, X[12], -MAD_F(0x0898c779));
 * MAD_F_MLA(hi, lo, X[14],  MAD_F(0x0f9ee890));
 * MAD_F_MLA(hi, lo, X[15], -MAD_F(0x0bcbe352));
 * MAD_F_MLA(hi, lo, X[17],  MAD_F(0x0e313245));
 *
 * x[3]  = MAD_F_MLZ(hi, lo) + t5;
 * x[14] = -x[3];
**************************************************/
IMDCT27_X3X14_gen: 
  MUL    (0x0763),  %R10          /* X[0]*Kx            */
  MAC    (0x0acf),  %R3           /* X[2]*Kx            */
  MAC    (0x0376),  %R5           /* X[3]*Kx            */
  MAC    (0x0d7e),  %R2           /* X[5]*Kx            */
  MAC   -(0x00b2+1),  %R4           /* X[6]*Kx            */
  MAC    (0x0f42),  %R1           /* X[8]*Kx            */
  MAC   -(0x04cf+1),  %R7           /* X[9]*Kx            */
  MAC    (0x0ffc),  %R12          /* X[11]*Kx           */
  MAC   -(0x0898+1),  %R13          /* X[12]*Kx           */
  MAC    (0x0f9e),  %R11          /* X[14]*Kx           */
  MAC   -(0x0bcb+1),  %R14          /* X[15]*Kx           */
  MAC    (0x0e31),  %R15          /* X[17]*Kx           */
  
  mfml  %R10
  ADD   %R0, %R10
  ST    %R10, (%R9, 0x0c)
  NOT   %R10
  ADDQ  0x1, %R10
  ST    %R10, (%R9, 0x38)            

  LD    (%R8, 0x00), %R10           /* X[0]  */
  asr   0xc, %R10

/***************************************************************************
 * Register usage                                                           
 *    0       1       2       3       4       5       6       7             
 *--------------------------------------------------------------------------
 *    t5      X[8]    X[5]   X[2]     X[6]    X[ 3]   FP      X[ 9]         
 *==========================================================================
 *    8       9       10      11      12      13      14      15    hi:lo   
 *--------------------------------------------------------------------------
 *    X_ptr   x_ptr   X[0]    X[14]   X[11]   X[12]   X[15]   X[17]         
 ***************************************************************************
 * MAD_F_ML0(hi, lo, X[0],  -MAD_F(0x0ffc19fd));
 * MAD_F_MLA(hi, lo, X[2],  -MAD_F(0x0f9ee890));
 * MAD_F_MLA(hi, lo, X[3],  -MAD_F(0x0f426cb5));
 * MAD_F_MLA(hi, lo, X[5],  -MAD_F(0x0e313245));
 * MAD_F_MLA(hi, lo, X[6],  -MAD_F(0x0d7e8807));
 * MAD_F_MLA(hi, lo, X[8],  -MAD_F(0x0bcbe352));
 * MAD_F_MLA(hi, lo, X[9],  -MAD_F(0x0acf37ad));
 * MAD_F_MLA(hi, lo, X[11], -MAD_F(0x0898c779));
 * MAD_F_MLA(hi, lo, X[12], -MAD_F(0x07635284));
 * MAD_F_MLA(hi, lo, X[14], -MAD_F(0x04cfb0e2));
 * MAD_F_MLA(hi, lo, X[15], -MAD_F(0x03768962));
 * MAD_F_MLA(hi, lo, X[17], -MAD_F(0x00b2aa3e));
 *
 * x[26] = x[27] = MAD_F_MLZ(hi, lo) + t5;
 ********************************************************/
IMDCT27_X26X27_gen: 
  MUL   -(0x0ffc+1),  %R10          /* X[0]*Kx            */
  MAC   -(0x0f9e+1),  %R3           /* X[2]*Kx            */
  MAC   -(0x0f42+1),  %R5           /* X[3]*Kx            */
  MAC   -(0x0e31+1),  %R2           /* X[5]*Kx            */
  MAC   -(0x0d7e+1),  %R4           /* X[6]*Kx            */
  MAC   -(0x0bcb+1),  %R1           /* X[8]*Kx            */
  MAC   -(0x0acf+1),  %R7           /* X[9]*Kx            */
  MAC   -(0x0898+1),  %R12          /* X[11]*Kx           */
  MAC   -(0x0763+1),  %R13          /* X[12]*Kx           */
  MAC   -(0x04cf+1),  %R11          /* X[14]*Kx           */
  MAC   -(0x0376+1),  %R14          /* X[15]*Kx           */
  MAC   -(0x00b2+1),  %R15          /* X[17]*Kx           */

  mfml  %R10
  ADD   %R0, %R10
  ST    %R10, (%R9, 0x6c)
  ST    %R10, (%R9, 0x68)
    
  LEA   (%SP, 0x18), %SP           /* stack adjustment SP <- iSP  */

  
IMDCT28_ENDOF_FUNC:   
/***********************************************************************************************/  

DCT_WINDOW_FNC :
  LD  (%SP, 0x44), %R15             /* get the 3rd argument - block type */


/***************************************************************************
 * Register usage                                                           
 *    0       1       2       3       4       5       6       7             
 *--------------------------------------------------------------------------
 *    t5      x[27]   X[10]   X[16]   t6      X[ 3]   X[ 8]   X[ 9]         
 *==========================================================================
 *    8       9       10      11      12      13      14      15    hi:lo   
 *--------------------------------------------------------------------------
 *    X_ptr   x_ptr   N/A     x[25]   X[11]   X[12]   X[15]   mode
 ***************************************************************************
 *  if block_type is STOP block, jump to STOP_O_17
 *****************************************************************/
   
  CMPQ  (0x3), %R15
  JZ    STOP_0_17
  
/**********************************************
 * Normal Operations
 **********************************************/  
   
NORMAL_0_17 :
  LD  (%R9, 0x0),   %R0         /* x[0]                                   */
  LD  (%R9, 0x4),   %R2         /* x[1]                                   */
  LD  (%R9, 0x8),   %R4         /* x[2]                                   */
  LD  (%R9, 0xc),   %R8         /* x[3]                                   */
  LD  (%R9, 0x10),  %R10        /* x[4] !!input array pointer destory!!!  */
  LD  (%R9, 0x14),  %R12        /* x[5]                                   */
  LD  (%R9, 0x18),  %R14        /* x[6]                                   */
  asr 0xc, %R0
  asr 0xc, %R2
  asr 0xc, %R4
  asr 0xc, %R8
  asr 0xc, %R10
  asr 0xc, %R12
  asr 0xc, %R14
  MUL (0x00b2), %R0
  MUL (0x0216), %R2
  MUL (0x0376), %R4
  MUL (0x04cf), %R8
  MUL (0x061f), %R10
  MUL (0x0763), %R12
  MUL (0x0898), %R14
  ST  %R0,  (%R9, 0x0)
  ST  %R2,  (%R9, 0x4)
  ST  %R4,  (%R9, 0x8)
  ST  %R8,  (%R9, 0xc)
  ST  %R10, (%R9, 0x10)
  ST  %R12, (%R9, 0x14)
  ST  %R14, (%R9, 0x18)

  LD  (%R9, 0x1C),  %R0         /* x[7]                         */
  LD  (%R9, 0x20),  %R2         /* x[8]                         */
  LD  (%R9, 0x24),  %R4         /* x[9]                         */
  LD  (%R9, 0x28),  %R8         /* x[10]                        */
  LD  (%R9, 0x2c),  %R10        /* x[11]                        */
  LD  (%R9, 0x30),  %R12        /* x[12]                        */
  LD  (%R9, 0x34),  %R14        /* x[13]                        */
  asr 0xc, %R0
  asr 0xc, %R2
  asr 0xc, %R4
  asr 0xc, %R8
  asr 0xc, %R10
  asr 0xc, %R12
  asr 0xc, %R14
  MUL (0x09bd), %R0 
  MUL (0x0acf), %R2
  MUL (0x0bcb), %R4
  MUL (0x0cb1), %R8
  MUL (0x0d7e), %R10
  MUL (0x0e31), %R12
  MUL (0x0ec8), %R14
  ST  %R0 , (%R9, 0x1C)
  ST  %R2,  (%R9, 0x20)
  ST  %R4,  (%R9, 0x24)
  ST  %R8,  (%R9, 0x28)
  ST  %R10, (%R9, 0x2c)
  ST  %R12, (%R9, 0x30)
  ST  %R14, (%R9, 0x34)

  LD  (%R9, 0x38),  %R0         /* x[14]                        */
  LD  (%R9, 0x3C),  %R2         /* x[15]                        */
  LD  (%R9, 0x40),  %R4
  LD  (%R9, 0x44),  %R8
  asr 0xc, %R0
  asr 0xc, %R2
  asr 0xc, %R4
  asr 0xc, %R8
  MUL (0x0f42), %R0 
  MUL (0x0f9e), %R2 
  MUL (0x0fdc), %R4
  MUL (0x0ffc), %R8
  ST  %R0,  (%R9, 0x38)
  ST  %R2,  (%R9, 0x3C)
  ST  %R4,  (%R9, 0x40)
  ST  %R8,  (%R9, 0x44)

      
/**********************************************************
 *  in the case of NORMAL block, jump to STOP_18_35
 *********************************************************/
  CMPQ  (0x0), %R15
  JZ    STOP_18_35
  
  
/**********************************************************
 * This manupulation is dedicated process for start block
 **********************************************************/
START_18_35 :
  
  /* 18~23: unchange            */
  /* 24~29: apply short window  */
  LD  (%R9, 0x60),  %R0          /* x[24] */
  LD  (%R9, 0x64),  %R2
  LD  (%R9, 0x68),  %R4
  LD  (%R9, 0x6C),  %R8
  LD  (%R9, 0x70),  %R10
  LD  (%R9, 0x74),  %R12
  asr 0xc, %R0
  asr 0xc, %R2
  asr 0xc, %R4
  asr 0xc, %R8
  asr 0xc, %R10
  asr 0xc, %R12
  MUL (0x0fdc), %R0
  MUL (0x0ec8), %R2
  MUL (0x0cb1), %R4
  MUL (0x09bd), %R8
  MUL (0x061f), %R10
  MUL (0x0216), %R12
  ST  %R0,  (%R9, 0x60)
  ST  %R2,  (%R9, 0x64)
  ST  %R4,  (%R9, 0x68)
  ST  %R8,  (%R9, 0x6C)
  ST  %R10, (%R9, 0x70)
  ST  %R12, (%R9, 0x74)
  
  /* 30~35: zeroing     */
  LDI 0x0, %R0
  ST  %R0,  (%R9, 0x78)
  ST  %R0,  (%R9, 0x7C)
  ST  %R0,  (%R9, 0x80)
  ST  %R0,  (%R9, 0x84)
  ST  %R0,  (%R9, 0x88)
  ST  %R0,  (%R9, 0x8C)

  /* End of processing */  
  JMP   END_IMDCT_WIND
  
/*************************************
 * This manupulation is dedicated process for stop block
 *************************************/
STOP_0_17 :

  /* 0~5: zeroing      */
  LDI   0x0, %R0
  ST  %R0,  (%R9, 0x0)
  ST  %R0,  (%R9, 0x4)
  ST  %R0,  (%R9, 0x8)
  ST  %R0,  (%R9, 0xC)
  ST  %R0,  (%R9, 0x10)
  ST  %R0,  (%R9, 0x14)

  /* 6~11: apply short window */
  LD  (%R9, 0x18),  %R0
  LD  (%R9, 0x1C),  %R2
  LD  (%R9, 0x20),  %R4
  LD  (%R9, 0x24),  %R8
  LD  (%R9, 0x28),  %R10
  LD  (%R9, 0x2C),  %R12
  asr 0xc, %R0
  asr 0xc, %R2
  asr 0xc, %R4
  asr 0xc, %R8
  asr 0xc, %R10
  asr 0xc, %R12
  MUL (0x0216), %R0
  MUL (0x061f), %R2
  MUL (0x09bd), %R4
  MUL (0x0cb1), %R8
  MUL (0x0ec8), %R10
  MUL (0x0fdc), %R12
  ST  %R0,  (%R9, 0x18)
  ST  %R2,  (%R9, 0x1C)
  ST  %R4,  (%R9, 0x20)
  ST  %R8,  (%R9, 0x24)
  ST  %R10, (%R9, 0x28)
  ST  %R12, (%R9, 0x2C)
  
  /* 12~17: unchange */
  
/******************************************************
 * Normal & STOP processing for 18th~35th block
 ******************************************************/
STOP_18_35 :  

  /* 18~25  */
  LD  (%R9, 0x48),  %R0
  LD  (%R9, 0x4c),  %R2
  LD  (%R9, 0x50),  %R4
  LD  (%R9, 0x54),  %R8
  LD  (%R9, 0x58),  %R10
  LD  (%R9, 0x5c),  %R12
  LD  (%R9, 0x60),  %R14
  asr 0xc, %R0
  asr 0xc, %R2
  asr 0xc, %R4
  asr 0xc, %R8
  asr 0xc, %R10
  asr 0xc, %R12
  asr 0xc, %R14
  MUL (0x0ffc), %R0
  MUL (0x0fdc), %R2
  MUL (0x0f9e), %R4
  MUL (0x0f42), %R8
  MUL (0x0ec8), %R10
  MUL (0x0e31), %R12
  MUL (0x0d7e), %R14
  ST  %R0,  (%R9, 0x48)
  ST  %R2,  (%R9, 0x4C)
  ST  %R4,  (%R9, 0x50)
  ST  %R8,  (%R9, 0x54)
  ST  %R10, (%R9, 0x58)
  ST  %R12, (%R9, 0x5C)
  ST  %R14, (%R9, 0x60)
  
  /* 26~31  */
  LD  (%R9, 0x64),  %R0 
  LD  (%R9, 0x68),  %R2
  LD  (%R9, 0x6c),  %R4
  LD  (%R9, 0x70),  %R8
  LD  (%R9, 0x74),  %R10
  LD  (%R9, 0x78),  %R12
  LD  (%R9, 0x7c),  %R14
  asr 0xc, %R0
  asr 0xc, %R2
  asr 0xc, %R4
  asr 0xc, %R8
  asr 0xc, %R10
  asr 0xc, %R12
  asr 0xc, %R14
  MUL (0x0cb1), %R0 
  MUL (0x0bcb), %R2
  MUL (0x0acf), %R4
  MUL (0x09bd), %R8
  MUL (0x0898), %R10
  MUL (0x0763), %R12
  MUL (0x061f), %R14
  ST  %R0 , (%R9, 0x64)
  ST  %R2,  (%R9, 0x68)
  ST  %R4,  (%R9, 0x6C)
  ST  %R8,  (%R9, 0x70)
  ST  %R10, (%R9, 0x74)
  ST  %R12, (%R9, 0x78)
  ST  %R14, (%R9, 0x7C)
  
  LD  (%R9, 0x80),  %R12
  LD  (%R9, 0x84),  %R14
  LD  (%R9, 0x88),  %R0
  LD  (%R9, 0x8C),  %R2
  asr 0xc, %R0
  asr 0xc, %R2
  asr 0xc, %R12
  asr 0xc, %R14
  MUL (0x04cf), %R12
  MUL (0x0376), %R14
  MUL (0x0216), %R0
  MUL (0x00b2), %R2
  ST  %R12, (%R9, 0x80)
  ST  %R14, (%R9, 0x84)
  ST  %R0,  (%R9, 0x88)
  ST  %R2,  (%R9, 0x8C)

  /***************************************
   * Restore context & return
   ***************************************/
END_IMDCT_WIND : 
  POP    %R10-%R15
  POP    %R0-%R7
  jplr
  
